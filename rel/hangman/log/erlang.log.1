
=====
===== LOGGING STARTED Tue Mar 15 11:50:44 PDT 2016
=====
0,0,0,0,0,0,0,0,0,
                                  0,0,0,125,0,21,25,31,101,31,101,29,101,31,
                                  101,31,101,29,105,31,101,31,101,27,114,0,21,
                                  0>>},
                            source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                          #{'__struct__' => 'Elixir.MapSet',map => #{<<"e">> => true}}}},
                  {'$gen_call',
                      {<0.3658.1>,#Ref<0.0.1.53665>},
                      {reduce_and_store,
                          {<<"julio">>,1,2},
                          #{'__struct__' => 'Elixir.Regex',
                            opts => <<>>,
                            re_pattern => {re_pattern,0,0,0,
                                <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,255,
                                  255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,
                                  0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                  0,0,0,125,0,21,25,31,101,31,101,29,101,31,
                                  101,31,101,29,105,31,101,31,101,27,114,0,21,
                                  0>>},
                            source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                          #{'__struct__' => 'Elixir.MapSet',map => #{<<"e">> => true}}}},
                  {'$gen_call',
                      {<0.3660.1>,#Ref<0.0.1.53672>},
                      {reduce_and_store,
                          {<<"julio">>,1,2},
                          #{'__struct__' => 'Elixir.Regex',
                            opts => <<>>,
                            re_pattern => {re_pattern,0,0,0,
                                <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,255,
                                  255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,
                                  0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                  0,0,0,125,0,21,25,31,101,31,101,29,101,31,
                                  101,31,101,29,105,31,101,31,101,27,114,0,21,
                                  0>>},
                            source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                          #{'__struct__' => 'Elixir.MapSet',map => #{<<"e">> => true}}}},
                  {'$gen_call',
                      {<0.3662.1>,#Ref<0.0.1.53681>},
                      {reduce_and_store,
                          {<<"julio">>,1,2},
                          #{'__struct__' => 'Elixir.Regex',
                            opts => <<>>,
                            re_pattern => {re_pattern,0,0,0,
                                <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,255,
                                  255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,
                                  0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                  0,0,0,125,0,21,25,31,101,31,101,29,101,31,
                                  101,31,101,29,105,31,101,31,101,27,114,0,21,
                                  0>>},
                            source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                          #{'__struct__' => 'Elixir.MapSet',map => #{<<"e">> => true}}}},
                  {'$gen_call',
                      {<0.3664.1>,#Ref<0.0.1.53719>},
                      {reduce_and_store,
                          {<<"julio">>,1,2},
                          #{'__struct__' => 'Elixir.Regex',
                            opts => <<>>,
                            re_pattern => {re_pattern,0,0,0,
                                <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,255,
                                  255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,
                                  0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                  0,0,0,125,0,21,25,31,101,31,101,29,101,31,
                                  101,31,101,29,105,31,101,31,101,27,114,0,21,
                                  0>>},
                            source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                          #{'__struct__' => 'Elixir.MapSet',map => #{<<"e">> => true}}}},
                  {'$gen_call',
                      {<0.3666.1>,#Ref<0.0.1.53728>},
                      {reduce_and_store,
                          {<<"julio">>,1,2},
                          #{'__struct__' => 'Elixir.Regex',
                            opts => <<>>,
                            re_pattern => {re_pattern,0,0,0,
                                <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,255,
                                  255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,
                                  0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                  0,0,0,125,0,21,25,31,101,31,101,29,101,31,
                                  101,31,101,29,105,31,101,31,101,27,114,0,21,
                                  0>>},
                            source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                          #{'__struct__' => 'Elixir.MapSet',map => #{<<"e">> => true}}}},
                  {'$gen_call',
                      {<0.3668.1>,#Ref<0.0.1.53731>},
                      {reduce_and_store,
                          {<<"julio">>,1,2},
                          #{'__struct__' => 'Elixir.Regex',
                            opts => <<>>,
                            re_pattern => {re_pattern,0,0,0,
                                <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,255,
                                  255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,
                                  0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                  0,0,0,125,0,21,25,31,101,31,101,29,101,31,
                                  101,31,101,29,105,31,101,31,101,27,114,0,21,
                                  0>>},
                            source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                          #{'__struct__' => 'Elixir.MapSet',map => #{<<"e">> => true}}}},
                  {'$gen_call',
                      {<0.3670.1>,#Ref<0.0.1.53735>},
                      {reduce_and_store,
                          {<<"julio">>,1,2},
                          #{'__struct__' => 'Elixir.Regex',
                            opts => <<>>,
                            re_pattern => {re_pattern,0,0,0,
                                <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,255,
                                  255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,
                                  0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                  0,0,0,125,0,21,25,31,101,31,101,29,101,31,
                                  101,31,101,29,105,31,101,31,101,27,114,0,21,
                                  0>>},
                            source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                          #{'__struct__' => 'Elixir.MapSet',map => #{<<"e">> => true}}}},
                  {'$gen_call',
                      {<0.3590.1>,#Ref<0.0.1.53741>},
                      {reduce_and_store,
                          {<<"julio">>,1,3},
                          #{'__struct__' => 'Elixir.Regex',
                            opts => <<>>,
                            re_pattern => {re_pattern,0,0,0,
                                <<69,82,67,80,11,1,0,0,16,0,0,0,1,0,0,0,255,
                                  255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,
                                  0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                  0,0,0,125,0,207,25,107,255,255,255,255,255,
                                  255,255,255,255,255,255,255,223,253,255,255,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,107,255,255,255,255,255,
                                  255,255,255,255,255,255,255,223,253,255,255,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,29,101,107,255,255,255,
                                  255,255,255,255,255,255,255,255,255,223,253,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,255,255,107,255,255,255,
                                  255,255,255,255,255,255,255,255,255,223,253,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,255,255,29,105,107,255,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  223,253,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,255,255,255,255,107,255,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  223,253,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,255,255,255,255,27,114,
                                  0,207,0>>},
                            source => <<"^[^ei][^ei]e[^ei][^ei]i[^ei][^ei]$">>}, 
                          #{'__struct__' => 'Elixir.MapSet',
                            map => #{<<"e">> => true,<<"i">> => true}}}},
                  {'$gen_call',
                      {<0.3672.1>,#Ref<0.0.1.53745>},
                      {reduce_and_store,
                          {<<"julio">>,1,2},
                          #{'__struct__' => 'Elixir.Regex',
                            opts => <<>>,
                            re_pattern => {re_pattern,0,0,0,
                                <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,255,
                                  255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,
                                  0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                  0,0,0,125,0,21,25,31,101,31,101,29,101,31,
                                  101,31,101,29,105,31,101,31,101,27,114,0,21,
                                  0>>},
                            source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                          #{'__struct__' => 'Elixir.MapSet',map => #{<<"e">> => true}}}},
                  {'$gen_call',
                      {<0.3594.1>,#Ref<0.0.1.53755>},
                      {reduce_and_store,
                          {<<"julio">>,1,3},
                          #{'__struct__' => 'Elixir.Regex',
                            opts => <<>>,
                            re_pattern => {re_pattern,0,0,0,
                                <<69,82,67,80,11,1,0,0,16,0,0,0,1,0,0,0,255,
                                  255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,
                                  0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                  0,0,0,125,0,207,25,107,255,255,255,255,255,
                                  255,255,255,255,255,255,255,223,253,255,255,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,107,255,255,255,255,255,
                                  255,255,255,255,255,255,255,223,253,255,255,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,29,101,107,255,255,255,
                                  255,255,255,255,255,255,255,255,255,223,253,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,255,255,107,255,255,255,
                                  255,255,255,255,255,255,255,255,255,223,253,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,255,255,29,105,107,255,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  223,253,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,255,255,255,255,107,255,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  223,253,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,255,255,255,255,27,114,
                                  0,207,0>>},
                            source => <<"^[^ei][^ei]e[^ei][^ei]i[^ei][^ei]$">>}, 
                          #{'__struct__' => 'Elixir.MapSet',
                            map => #{<<"e">> => true,<<"i">> => true}}}},
                  {'$gen_call',
                      {<0.3598.1>,#Ref<0.0.1.53767>},
                      {reduce_and_store,
                          {<<"julio">>,1,3},
                          #{'__struct__' => 'Elixir.Regex',
                            opts => <<>>,
                            re_pattern => {re_pattern,0,0,0,
                                <<69,82,67,80,11,1,0,0,16,0,0,0,1,0,0,0,255,
                                  255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,
                                  0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                  0,0,0,125,0,207,25,107,255,255,255,255,255,
                                  255,255,255,255,255,255,255,223,253,255,255,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,107,255,255,255,255,255,
                                  255,255,255,255,255,255,255,223,253,255,255,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,29,101,107,255,255,255,
                                  255,255,255,255,255,255,255,255,255,223,253,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,255,255,107,255,255,255,
                                  255,255,255,255,255,255,255,255,255,223,253,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,255,255,29,105,107,255,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  223,253,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,255,255,255,255,107,255,
                                  255,255,255,255,255,255,255,255,255,255,255,
                                  223,253,255,255,255,255,255,255,255,255,255,
                                  255,255,255,255,255,255,255,255,255,27,114,
                                  0,207,0>>},
                            source => <<"^[^ei][^ei]e[^ei][^ei]i[^ei][^ei]$">>}, 
                          #{'__struct__' => 'Elixir.MapSet',
                            map => #{<<"e">> => true,<<"i">> => true}}}}]
    links: [<0.114.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 46422
    stack_size: 27
    reductions: 4354088
  neighbours:

11:50:42.092 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3662.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e]i[^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

11:50:42.092 module=Game.Server [debug] About to remove player pid from active list

=SUPERVISOR REPORT==== 15-Mar-2016::11:50:42 ===
     Supervisor: {<0.114.0>,'Elixir.Reduction.Engine.Pool'}
     Context:    child_terminated
     Reason:     {#{'__exception__' => true,
                    '__struct__' => 'Elixir.HangmanError',
                    message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                  [{'Elixir.Pass.Cache',get,2,
                       [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                   {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,3,
                       [{file,"lib/hangman/reduction_engine_worker.ex"},
                        {line,103}]},
                   {'Elixir.Reduction.Engine.Worker',handle_call,3,
                       [{file,"lib/hangman/reduction_engine_worker.ex"},
                        {line,84}]},
                   {gen_server,try_handle_call,4,
                       [{file,"gen_server.erl"},{line,629}]},
                   {gen_server,handle_msg,5,
                       [{file,"gen_server.erl"},{line,661}]},
                   {proc_lib,init_p_do_apply,3,
                       [{file,"proc_lib.erl"},{line,240}]}]}
     Offender:   [{pid,<0.123.0>},
                  {id,{reduction_engine_worker,9}},
                  {mfargs,{'Elixir.Reduction.Engine.Worker',start_link,"\t"}},
                  {restart_type,permanent},
                  {shutdown,5000},
                  {child_type,worker}]


11:50:42.092 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3594.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3604.1> => "julio", #PID<0.3608.1> => "julio", #PID<0.3612.1> => "julio", #PID<0.3616.1> => "julio", #PID<0.3618.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3650.1> => "julio", #PID<0.3658.1> => "julio", #PID<0.3660.1> => "julio", #PID<0.3664.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3668.1> => "julio", #PID<0.3670.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.093 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3660.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e]i[^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

11:50:42.093 module=Game.Server [debug] About to remove player pid from active list

11:50:42.094 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3594.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3604.1> => "julio", #PID<0.3608.1> => "julio", #PID<0.3612.1> => "julio", #PID<0.3616.1> => "julio", #PID<0.3618.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3650.1> => "julio", #PID<0.3658.1> => "julio", #PID<0.3664.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3668.1> => "julio", #PID<0.3670.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}} 

11:50:42.094 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3658.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e]i[^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

11:50:42.094 module=Game.Server [debug] About to remove player pid from active list

11:50:42.095 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3594.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3604.1> => "julio", #PID<0.3608.1> => "julio", #PID<0.3612.1> => "julio", #PID<0.3616.1> => "julio", #PID<0.3618.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3650.1> => "julio", #PID<0.3664.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3668.1> => "julio", #PID<0.3670.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.095 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3650.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e]i[^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

11:50:42.096 module=Game.Server [debug] About to remove player pid from active list

11:50:42.096 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3594.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3604.1> => "julio", #PID<0.3608.1> => "julio", #PID<0.3612.1> => "julio", #PID<0.3616.1> => "julio", #PID<0.3618.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3664.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3668.1> => "julio", #PID<0.3670.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.097 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3608.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e][^e][^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

11:50:42.097 module=Game.Server [debug] About to remove player pid from active list

11:50:42.097 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3594.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3604.1> => "julio", #PID<0.3612.1> => "julio", #PID<0.3616.1> => "julio", #PID<0.3618.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3664.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3668.1> => "julio", #PID<0.3670.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3598.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,3},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,11,1,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,207,25,107,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      255,223,253,255,255,255,255,255,255,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      255,107,255,255,255,255,255,255,255,255,
                                      255,255,255,255,223,253,255,255,255,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      255,255,255,255,29,101,107,255,255,255,
                                      255,255,255,255,255,255,255,255,255,223,
                                      253,255,255,255,255,255,255,255,255,255,
                                      255,255,255,255,255,255,255,255,255,107,
                                      255,255,255,255,255,255,255,255,255,255,
                                      255,255,223,253,255,255,255,255,255,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      255,255,29,105,107,255,255,255,255,255,
                                      255,255,255,255,255,255,255,223,253,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      255,255,255,255,255,255,255,107,255,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      223,253,255,255,255,255,255,255,255,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      27,114,0,207,0>>},
                                source => <<"^[^ei][^ei]e[^ei][^ei]i[^ei][^ei]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true,<<"i">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3599.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 27
    reductions: 6798
  neighbours:
    neighbour: [{pid,<0.3599.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3598.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3598.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:42.098 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3604.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e][^e][^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

11:50:42.098 module=Game.Server [debug] About to remove player pid from active list

11:50:42.098 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3594.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3612.1> => "julio", #PID<0.3616.1> => "julio", #PID<0.3618.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3664.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3668.1> => "julio", #PID<0.3670.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.099 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3664.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e]i[^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

11:50:42.099 module=Game.Server [debug] About to remove player pid from active list

=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3626.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,2},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,21,25,31,101,31,
                                      101,29,101,31,101,31,101,31,101,31,101,
                                      31,101,27,114,0,21,0>>},
                                source => <<"^[^e][^e]e[^e][^e][^e][^e][^e]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3628.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 27
    reductions: 5808
  neighbours:
    neighbour: [{pid,<0.3628.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3626.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3626.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:42.099 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3594.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3612.1> => "julio", #PID<0.3616.1> => "julio", #PID<0.3618.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3668.1> => "julio", #PID<0.3670.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3638.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,2},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,21,25,31,101,31,
                                      101,29,101,31,101,31,101,31,101,31,101,
                                      31,101,27,114,0,21,0>>},
                                source => <<"^[^e][^e]e[^e][^e][^e][^e][^e]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3639.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 27
    reductions: 5770
  neighbours:
    neighbour: [{pid,<0.3639.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3638.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3638.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:42.103 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3612.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e][^e][^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

11:50:42.103 module=Game.Server [debug] About to remove player pid from active list

11:50:42.104 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3594.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3616.1> => "julio", #PID<0.3618.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3668.1> => "julio", #PID<0.3670.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.104 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3668.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e]i[^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

11:50:42.104 module=Game.Server [debug] About to remove player pid from active list

=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3622.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,2},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,21,25,31,101,31,
                                      101,29,101,31,101,31,101,31,101,31,101,
                                      31,101,27,114,0,21,0>>},
                                source => <<"^[^e][^e]e[^e][^e][^e][^e][^e]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3624.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 27
    reductions: 5797
  neighbours:
    neighbour: [{pid,<0.3624.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3622.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3622.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:42.105 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3594.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3616.1> => "julio", #PID<0.3618.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3670.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.105 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3670.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e]i[^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

11:50:42.105 module=Game.Server [debug] About to remove player pid from active list

11:50:42.106 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3594.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3616.1> => "julio", #PID<0.3618.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.106 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3616.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e][^e][^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3640.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,2},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,21,25,31,101,31,
                                      101,29,101,31,101,31,101,31,101,31,101,
                                      31,101,27,114,0,21,0>>},
                                source => <<"^[^e][^e]e[^e][^e][^e][^e][^e]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3642.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 27
    reductions: 5786
  neighbours:
    neighbour: [{pid,<0.3642.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3640.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3640.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:42.106 module=Game.Server [debug] About to remove player pid from active list

11:50:42.107 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3594.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3618.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3586.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,3},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,11,1,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,207,25,107,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      255,223,253,255,255,255,255,255,255,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      255,107,255,255,255,255,255,255,255,255,
                                      255,255,255,255,223,253,255,255,255,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      255,255,255,255,29,101,107,255,255,255,
                                      255,255,255,255,255,255,255,255,255,223,
                                      253,255,255,255,255,255,255,255,255,255,
                                      255,255,255,255,255,255,255,255,255,107,
                                      255,255,255,255,255,255,255,255,255,255,
                                      255,255,223,253,255,255,255,255,255,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      255,255,29,105,107,255,255,255,255,255,
                                      255,255,255,255,255,255,255,223,253,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      255,255,255,255,255,255,255,107,255,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      223,253,255,255,255,255,255,255,255,255,
                                      255,255,255,255,255,255,255,255,255,255,
                                      27,114,0,207,0>>},
                                source => <<"^[^ei][^ei]e[^ei][^ei]i[^ei][^ei]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true,<<"i">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3588.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 27
    reductions: 6838
  neighbours:
    neighbour: [{pid,<0.3588.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3586.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3586.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:42.107 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3618.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e][^e][^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

11:50:42.107 module=Game.Server [debug] About to remove player pid from active list

11:50:42.108 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3594.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.108 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3594.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 3}, ~r/^[^ei][^ei]e[^ei][^ei]i[^ei][^ei]$/, #MapSet<["e", "i"]>}, 5000]}}}

11:50:42.108 module=Game.Server [debug] About to remove player pid from active list

=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3634.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,2},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,21,25,31,101,31,
                                      101,29,101,31,101,31,101,31,101,31,101,
                                      31,101,27,114,0,21,0>>},
                                source => <<"^[^e][^e]e[^e][^e][^e][^e][^e]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3636.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 27
    reductions: 5808
  neighbours:
    neighbour: [{pid,<0.3636.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3634.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3634.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:42.109 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3666.1> => "julio", #PID<0.3672.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.116 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3672.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e]i[^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3630.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,2},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,21,25,31,101,31,
                                      101,29,101,31,101,31,101,31,101,31,101,
                                      31,101,27,114,0,21,0>>},
                                source => <<"^[^e][^e]e[^e][^e][^e][^e][^e]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3632.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 27
    reductions: 5810
  neighbours:
    neighbour: [{pid,<0.3632.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3630.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3630.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:42.116 module=Game.Server [debug] About to remove player pid from active list

11:50:42.117 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3590.1> => "julio", #PID<0.3601.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3666.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.118 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3590.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 3}, ~r/^[^ei][^ei]e[^ei][^ei]i[^ei][^ei]$/, #MapSet<["e", "i"]>}, 5000]}}}

11:50:42.121 module=Game.Server [debug] About to remove player pid from active list

=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3644.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,2},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,21,25,31,101,31,
                                      101,29,101,31,101,31,101,31,101,31,101,
                                      31,101,27,114,0,21,0>>},
                                source => <<"^[^e][^e]e[^e][^e][^e][^e][^e]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3646.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 6772
    stack_size: 27
    reductions: 5797
  neighbours:
    neighbour: [{pid,<0.3646.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3644.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3644.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:42.121 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3601.1> => "julio", #PID<0.3648.1> => "julio", #PID<0.3666.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.122 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3666.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e]i[^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3654.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,2},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,21,25,31,101,31,
                                      101,29,101,31,101,31,101,29,105,31,101,
                                      31,101,27,114,0,21,0>>},
                                source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3655.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 27
    reductions: 5800
  neighbours:
    neighbour: [{pid,<0.3655.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3654.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3654.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:42.122 module=Game.Server [debug] About to remove player pid from active list

11:50:42.122 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3601.1> => "julio", #PID<0.3648.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.125 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3601.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e][^e][^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3652.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,2},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,21,25,31,101,31,
                                      101,29,101,31,101,31,101,29,105,31,101,
                                      31,101,27,114,0,21,0>>},
                                source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3653.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 27
    reductions: 5800
  neighbours:
    neighbour: [{pid,<0.3653.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3652.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3652.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:42.125 module=Game.Server [debug] About to remove player pid from active list

11:50:42.128 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{#PID<0.3648.1> => "julio"}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:42.129 module=Game.Server [debug] In Game.Server handle info, received EXIT abnormal msg: {:EXIT, #PID<0.3648.1>, {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"}, [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]}, {Reduction.Engine.Worker, :do_reduce_and_store, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]}, {Reduction.Engine.Worker, :handle_call, 3, [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]}, {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]}, {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}, {GenServer, :call, [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}}, {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e]i[^e][^e]$/, #MapSet<["e"]>}, 5000]}}}

11:50:42.129 module=Game.Server [debug] About to remove player pid from active list

=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3656.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,2},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,21,25,31,101,31,
                                      101,29,101,31,101,31,101,29,105,31,101,
                                      31,101,27,114,0,21,0>>},
                                source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3657.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 27
    reductions: 5800
  neighbours:
    neighbour: [{pid,<0.3657.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3656.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3656.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:42.129 module=Game.Server [debug] {:EXIT, _, abnormal}, %Game.Server{active_pids: %{}, games: %{"julio" => #Game<[id: "julio", client_pid: #PID<0.3672.1>, finished: false, current_game_index: 0, secret: "CLEATING", pattern: "--E--I--", score: 0, secrets: ["CLEATING", "CONSTANTAN"], patterns: ["--------", "----------"], scores: [], max_wrong_guesses: 5, guessed_letters: [correct: ["E", "I"], incorrect: []], guessed_words: [incorrect: []]]>}}

11:50:43.002 [error] ** State machine #PID<0.3598.1> terminating 
** Last message in was {:"$gen_sync_event", {#PID<0.3560.1>, #Reference<0.0.1.53766>},
 :game_keep_guessing}
** When State == :intrigued_wall_e
**      Data  == {#Player<[name: "julio", type: :robot, round_no: 2, game_pid: #PID<0.267.0>,
  event_pid: #PID<0.3589.1>,
  round_data: [no: 2, guess: "i", guess_result: :correct_letter,
   round_code: :game_keep_guessing,
   round_status: "--E--I--; score=2; status=KEEP_GUESSING",
   pattern: "--E--I--"]]>, #PID<0.3599.1>}
** Reason for termination = 
** {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"},
  [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]},
   {Reduction.Engine.Worker, :do_reduce_and_store, 3,
    [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]},
   {Reduction.Engine.Worker, :handle_call, 3,
    [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]},
   {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]},
   {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]},
   {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]},
 {GenServer, :call,
  [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}},
   {:reduce_and_store, {"julio", 1, 3}, ~r/^[^ei][^ei]e[^ei][^ei]i[^ei][^ei]$/,
    #MapSet<["e", "i"]>}, 5000]}}


=CRASH REPORT==== 15-Mar-2016::11:50:43 ===
  crasher:
    initial call: Elixir.Player.FSM:init/1
    pid: <0.3662.1>
    registered_name: []
    exception exit: {{#{'__exception__' => true,
                        '__struct__' => 'Elixir.HangmanError',
                        message => <<"counter not found for key: {\"julio\", 1, 2}">>},
                      [{'Elixir.Pass.Cache',get,2,
                           [{file,"lib/hangman/pass_cache.ex"},{line,168}]},
                       {'Elixir.Reduction.Engine.Worker',do_reduce_and_store,
                           3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,103}]},
                       {'Elixir.Reduction.Engine.Worker',handle_call,3,
                           [{file,"lib/hangman/reduction_engine_worker.ex"},
                            {line,84}]},
                       {gen_server,try_handle_call,4,
                           [{file,"gen_server.erl"},{line,629}]},
                       {gen_server,handle_msg,5,
                           [{file,"gen_server.erl"},{line,661}]},
                       {proc_lib,init_p_do_apply,3,
                           [{file,"proc_lib.erl"},{line,240}]}]},
                     {'Elixir.GenServer',call,
                         [{via,gproc,{n,l,{reduction_engine_worker,9}}},
                          {reduce_and_store,
                              {<<"julio">>,1,2},
                              #{'__struct__' => 'Elixir.Regex',
                                opts => <<>>,
                                re_pattern => {re_pattern,0,0,0,
                                    <<69,82,67,80,81,0,0,0,16,0,0,0,1,0,0,0,
                                      255,255,255,255,255,255,255,255,0,0,0,0,
                                      0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,
                                      0,0,0,0,0,0,0,0,0,125,0,21,25,31,101,31,
                                      101,29,101,31,101,31,101,29,105,31,101,
                                      31,101,27,114,0,21,0>>},
                                source => <<"^[^e][^e]e[^e][^e]i[^e][^e]$">>},
                              #{'__struct__' => 'Elixir.MapSet',
                                map => #{<<"e">> => true}}},
                          5000]}}
      in function  gen_fsm:terminate/7 (gen_fsm.erl, line 626)
    ancestors: [hangman_player_supervisor,<0.136.0>,<0.106.0>,<0.102.0>,
                  <0.101.0>]
    messages: []
    links: [<0.267.0>,<0.3663.1>,<0.137.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 4185
    stack_size: 27
    reductions: 5800
  neighbours:
    neighbour: [{pid,<0.3663.1>},
                  {registered_name,[]},
                  {initial_call,
                      {'Elixir.Player.Async.Echo',init,['Argument__1']}},
                  {current_function,{gen_fsm,loop,7}},
                  {ancestors,
                      [<0.3662.1>,hangman_player_supervisor,<0.136.0>,
                       <0.106.0>,<0.102.0>,<0.101.0>]},
                  {messages,[]},
                  {links,[<0.3662.1>]},
                  {dictionary,[]},
                  {trap_exit,false},
                  {status,waiting},
                  {heap_size,233},
                  {stack_size,10},
                  {reductions,17}]

11:50:43.003 [error] ** State machine #PID<0.3626.1> terminating 
** Last message in was {:"$gen_sync_event", {#PID<0.3564.1>, #Reference<0.0.1.53549>},
 :game_keep_guessing}
** When State == :intrigued_wall_e
**      Data  == {#Player<[name: "julio", type: :robot, round_no: 1, game_pid: #PID<0.267.0>,
  event_pid: #PID<0.3607.1>,
  round_data: [no: 1, guess: "e", guess_result: :correct_letter,
   round_code: :game_keep_guessing,
   round_status: "--E-----; score=1; status=KEEP_GUESSING",
   pattern: "--E-----"]]>, #PID<0.3628.1>}
** Reason for termination = 
** {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"},
  [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]},
   {Reduction.Engine.Worker, :do_reduce_and_store, 3,
    [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]},
   {Reduction.Engine.Worker, :handle_call, 3,
    [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]},
   {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]},
   {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]},
   {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]},
 {GenServer, :call,
  [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}},
   {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e][^e][^e][^e]$/,
    #MapSet<["e"]>}, 5000]}}


11:50:43.005 [error] ** State machine #PID<0.3638.1> terminating 
** Last message in was {:"$gen_sync_event", {#PID<0.3567.1>, #Reference<0.0.1.53560>},
 :game_keep_guessing}
** When State == :intrigued_wall_e
**      Data  == {#Player<[name: "julio", type: :robot, round_no: 1, game_pid: #PID<0.267.0>,
  event_pid: #PID<0.3613.1>,
  round_data: [no: 1, guess: "e", guess_result: :correct_letter,
   round_code: :game_keep_guessing,
   round_status: "--E-----; score=1; status=KEEP_GUESSING",
   pattern: "--E-----"]]>, #PID<0.3639.1>}
** Reason for termination = 
** {{%HangmanError{message: "counter not found for key: {\"julio\", 1, 2}"},
  [{Pass.Cache, :get, 2, [file: 'lib/hangman/pass_cache.ex', line: 168]},
   {Reduction.Engine.Worker, :do_reduce_and_store, 3,
    [file: 'lib/hangman/reduction_engine_worker.ex', line: 103]},
   {Reduction.Engine.Worker, :handle_call, 3,
    [file: 'lib/hangman/reduction_engine_worker.ex', line: 84]},
   {:gen_server, :try_handle_call, 4, [file: 'gen_server.erl', line: 629]},
   {:gen_server, :handle_msg, 5, [file: 'gen_server.erl', line: 661]},
   {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]},
 {GenServer, :call,
  [{:via, :gproc, {:n, :l, {:reduction_engine_worker, 9}}},
   {:reduce_and_store, {"julio", 1, 2}, ~r/^[^e][^e]e[^e][^e][^e][^e][^e]$/,
    #MapSet<["e"]>}, 5000]}}


11:50:43.007 [error] ** State machine #PID<0.3622.1> terminating 
** Last message in was {:"$gen_sync_event", {#PID<0.3563.1>, #Reference<0.0.1.53491>},
 :game_keep_guessing}
** When State ==